<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SonarQube Data Viewer</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">SonarQube Issues Viewer</h1>
        <input id="searchBox" type="text" class="form-control mb-3" placeholder="Search...">
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Key</th>
                    <th>Severity</th>
                    <th>Project</th>
                    <th>Line</th>
                    <th>Component</th>
                    <th>Login</th>
                </tr>
            </thead>
            <tbody id="dataBody">
                <!-- Data will be dynamically inserted here -->
            </tbody>
        </table>
    </div>

    <script>
        const apiToken = "hhcnccncghgg";
        const apiUrls = [
            "https://sonar.vnnj.com/api/issues/search?key=jskjd",
            "https://sonar.vnnj.com/api/issues/search?key=jshjk"
        ];

        const headers = new Headers();
        headers.append("Authorization", "Basic " + btoa(apiToken + ":"));

        async function fetchData() {
            const allData = [];
            for (const url of apiUrls) {
                const response = await fetch(url, { headers });
                const data = await response.json();
                allData.push(...data.issues); // Assuming 'issues' contains the required data
            }
            return allData;
        }

        function displayData(data) {
            const tableBody = document.getElementById("dataBody");
            tableBody.innerHTML = ""; // Clear existing data
            data.forEach(item => {
                const row = `<tr>
                    <td>${item.key || ""}</td>
                    <td>${item.severity || ""}</td>
                    <td>${item.project || ""}</td>
                    <td>${item.line || ""}</td>
                    <td>${item.component || ""}</td>
                    <td>${item.login || ""}</td>
                </tr>`;
                tableBody.insertAdjacentHTML("beforeend", row);
            });
        }

        function setupSearch(data) {
            const searchBox = document.getElementById("searchBox");
            searchBox.addEventListener("input", () => {
                const query = searchBox.value.toLowerCase();
                const filteredData = data.filter(item =>
                    Object.values(item).some(val =>
                        String(val).toLowerCase().includes(query)
                    )
                );
                displayData(filteredData);
            });
        }

        async function init() {
            const data = await fetchData();
            displayData(data);
            setupSearch(data);
        }

        init();
    </script>
</body>
</html>