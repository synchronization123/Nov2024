<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Version Concat Script</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container my-5">
        <h2 class="text-center">Version Concat Script</h2>
        <div class="mb-3">
            <label for="versionInput" class="form-label">Enter Version:</label>
            <input type="text" id="versionInput" class="form-control" placeholder="Enter version (e.g., v1.0)">
        </div>
        <button id="startButton" class="btn btn-primary">Start</button>
        <div class="mt-4">
            <table class="table table-striped">
                <caption>Version</caption>
                <thead>
                    <tr>
                        <th scope="col">JQL Query</th>
                    </tr>
                </thead>
                <tbody id="resultTableBody">
                    <!-- Results will appear here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Predefined sentence templates
        const predefinedSentences = [
            "(labels in ({version}) OR \"Build(s)\" in ({version}))",
            "SELECT * FROM builds WHERE version = '{version}'",
            "The version '{version}' is currently active."
        ];

        // Reference to input box, button, and table body
        const versionInput = document.getElementById('versionInput');
        const startButton = document.getElementById('startButton');
        const resultTableBody = document.getElementById('resultTableBody');

        // Event listener for the start button
        startButton.addEventListener('click', () => {
            const version = versionInput.value.trim(); // Get user input
            if (version === "") {
                alert("Please enter a version!");
                return;
            }

            // Clear previous results
            resultTableBody.innerHTML = "";

            // Generate sentences and add to the table
            predefinedSentences.forEach(sentence => {
                const filledSentence = sentence.replace(/{version}/g, version);
                const tableRow = `<tr><td>${filledSentence}</td></tr>`;
                resultTableBody.insertAdjacentHTML('beforeend', tableRow);
            });
        });
    </script>
</body>
</html>