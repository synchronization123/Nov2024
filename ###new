import openpyxl
from openpyxl.styles import PatternFill, Font

# Load the Excel file
file_path = 'data.xlsx'
workbook = openpyxl.load_workbook(file_path)
sheet = workbook.active

# Define the substring to search for
substring = 'v12_develop'

# Define the style for highlighting
red_fill = PatternFill(start_color="FF0000", end_color="FF0000", fill_type="solid")
blue_font = Font(color="0000FF")

# Light yellow color in Excel RGB (FFFF99)
light_yellow = "FFFF99"

# List of the columns to check (assuming the columns 'comment' to 'comment.15' are from B to P)
comment_columns = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]  # Adjust if needed

# Assuming the issue key column is in column A (column 1)
issue_key_column = 1

# Iterate through all rows (from row 2 to row 29000, assuming row 1 is the header)
for row in sheet.iter_rows(min_row=2, max_row=29000, max_col=16):  # Iterating up to column 16 (comment.15)
    for idx, cell in enumerate(row):
        # Only consider cells in the comment columns and with light yellow background
        if idx + 2 in comment_columns:  # +2 because columns in Excel start at index 1 (A=1, B=2, etc.)
            if cell.fill.start_color.rgb == light_yellow and isinstance(cell.value, str) and substring in cell.value:
                # Highlight the cell with the substring match in red
                cell.fill = red_fill
                
                # Highlight the corresponding issue key column (column A) with blue font
                issue_key_cell = sheet.cell(row=cell.row, column=issue_key_column)  # Get the issue key cell
                issue_key_cell.font = blue_font

# Save the modified workbook
workbook.save('highlighted_data.xlsx')